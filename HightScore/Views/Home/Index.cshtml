@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IPagedList<CardVM>

@{
    ViewData["Title"] = "Games";

}

<style>
    .card-img-top {
        width: 100%;
        height: 400px;
        object-fit: fill;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: center;
        text-align: center;
        padding: 1rem;
    }

    .card {
        display: flex;
        flex-direction: column;
        height: 100%;
        position: relative;
        border-radius: 15px;
        background-color: #1d1f29;
        font-size: 15px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 0 15px 10px rgba(255, 255, 255, 0.7); 
        }


    .card-title a {
        transition: color 0.3s ease, text-shadow 0.3s ease;
    }

        .card-title a:hover {
            color: #ffffff; 
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8), 0 0 20px rgba(255, 255, 255, 0.6), 0 0 30px rgba(255, 255, 255, 0.4); 
        }


    .edit-button {
        background-color: cornflowerblue;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 0.75rem;
        cursor: pointer;
        border-radius: 0.25rem;
        position: absolute;
        top: 10px;
        right: 48px;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .card:hover .edit-button {
        opacity: 1;
    }

    .delete-button {
        background-color: red;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 0.75rem;
        cursor: pointer;
        border-radius: 0.25rem;
        position: absolute;
        top: 10px;
        right: 10px;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .card:hover .delete-button {
        opacity: 1;
    }

    .pagination {
        display: flex;
        justify-content: center;
        padding: 1rem 0;
    }

        .pagination .page-item .page-link {
            background-color: #222431;
            color: #e0e0e0;
            border: none;
        }

        .pagination .page-item.active .page-link {
            background-color: #28a745;
            color: white;
        }

        .pagination .page-item .page-link:hover {
            background-color: #36384a;
            color: white;
            border: none;
        }

    .input-group .form-control:focus {
        border-color: #28a745;
        box-shadow: 0 0 20px 8px rgba(40, 167, 69, 0.8), 0 0 40px 16px rgba(40, 167, 69, 0.5);
    }
</style>



<div class="container mt-5">
    <form method="get" asp-action="Index" class="d-flex justify-content-center">
        <div class="input-group mb-5 w-30">
            <input type="text" class="form-control" placeholder="Search for games" name="searchQuery" value="@ViewContext.HttpContext.Request.Query["searchQuery"]">
            <button class="btn btn-success" type="submit">Search</button>
        </div>
    </form>




    <div class="row">
        @foreach (var game in Model)
        {
            <div class="col-md-4 mb-4 d-flex">
                <div class="card w-100">
                    <a style="text-decoration:none; color:#a7b1c1" asp-controller="Items" asp-action="Details" asp-route-id="@game.Id"> <img src="/images/@game.photo" class="card-img-top" alt="@game.name"></a>
                    <div class="card-body ">
                        <h5 class="card-title">
                            <a style="text-decoration:none; color:#a7b1c1" asp-controller="Items" asp-action="Details" asp-route-id="@game.Id">@game.name</a>
                        </h5>
                        @if (game.AverageRating != null)
                        {
                            @if (game.AverageRating >= 50 && game.AverageRating <= 69.9)
                        {
                                <p style="font-size:20px" class="card-text text-warning"> @game.AverageRating <span style="color:aliceblue">- Mixed</span></p>

                        } @if ( game.AverageRating >= 70)
                        {
                                <p style="font-size:20px" class="card-text text-success"> @game.AverageRating <span style="color:aliceblue">- Positive</span></p>

                        }
                         @if (game.AverageRating < 49.9 )
                        {
                                <p style="font-size:20px" class="card-text text-danger"> @game.AverageRating <span style="color:aliceblue">- Negative</span></p>

                        }
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <form asp-controller="Items" asp-action="GameDelete" method="post" onsubmit="return confirm('Are you sure you want to delete this game?');">
                                <input type="hidden" name="id" value="@game.Id" />
                                <button type="submit" class="delete-button">X</button>
                            </form>

                            <form asp-controller=Items asp-action="EditGame" method="get">
                                <input type="hidden" name="id" value="@game.Id" />
                                <button type="submit" class="edit-button">Edit</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-12">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                     new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                ActiveLiElementClass = "active"
            })
        </div>
    </div>
</div>
